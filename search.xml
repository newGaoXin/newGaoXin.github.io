<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Mysql 自动 commit 模式下，插入数据不会立即 commit</title>
    <url>/2023/10/13/Mysql%20%E8%87%AA%E5%8A%A8%20commit%20%E6%A8%A1%E5%BC%8F%E4%B8%8B%EF%BC%8C%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E4%B8%8D%E4%BC%9A%E7%AB%8B%E5%8D%B3%20commit/</url>
    <content><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>在项目中</p>
<p>流程一（过程中没有使用事务）：</p>
<p>前端调用后端接口，后端会通过流的形式返回给前端，在最后会将数据持久化到 MySQL 数据库，并返回结束标志返回给前端</p>
<p>流程二：</p>
<p>前端收到结束标志后，会在一秒后调用接口刷新页面，调用查询列表接口，会查询流程一持久化数据并展示</p>
<p>项目技术：Java + SpringBoot + Mybatis-Plus + MySQL</p>
<h2 id="期望："><a href="#期望：" class="headerlink" title="期望："></a>期望：</h2><p>在流程一插入数据，流程二刷新即能获取到，因为在开发过程中只有 insert 一条数据，所以想法是不需要使用事务，并没有在流程中使用Spring 事务</p>
<h2 id="结果（问题）："><a href="#结果（问题）：" class="headerlink" title="结果（问题）："></a>结果（问题）：</h2><p>在流程一和流程二<strong>反复快速的操作中</strong>，会出现流程一插入的数据，流程二中前端拉取列表并<strong>没有获取到最新持久化的数据</strong></p>
<h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>在流程一，插入数据时使用Spring 事务，保证在数据插入成功，commit 之后返回结束标志给前端</p>
<h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h2><h3 id="一、MySQL-自动commit-模式下，插入数据不会立即-commit"><a href="#一、MySQL-自动commit-模式下，插入数据不会立即-commit" class="headerlink" title="一、MySQL 自动commit 模式下，插入数据不会立即 commit"></a>一、MySQL 自动commit 模式下，插入数据不会立即 commit</h3><p>在自动提交模式下，每次 insert 一条数据就会立即执行，但是并不一定会立即 commit。</p>
<p>在 MySQL 中，自动提交模式下，每个 SQL 语句都会自动成为一个事务，并且在执行完该语句后立即提交（commit）。但是，由于InnoDB 存储引擎采用了写日志（redo log）的机制，即使在自动提交模式下，insert 操作也不一定会立即 commit。</p>
<p>具体来说，当执行 insert 操作时，InnoDB 会将该操作写入到 redo log 中，然后将该操作应用到内存中的数据页（data page）中。此时，该操作的状态为“未提交”。在后续的操作中，如果需要将数据同步到磁盘中，InnoDB会将redo log中的操作应用到磁盘中的数据页中，并将该操作的状态设置为“已提交”。</p>
<p>因此，在自动提交模式下，每次insert一条数据就会立即执行，但是并不一定会立即commit。如果需要立即commit，可以使用MySQL的“commit”命令将数据立即提交到磁盘中。</p>
<h3 id="二、自动提交模式下，多久-commit-一次呢"><a href="#二、自动提交模式下，多久-commit-一次呢" class="headerlink" title="二、自动提交模式下，多久 commit 一次呢"></a>二、自动提交模式下，多久 commit 一次呢</h3><p>在自动提交模式下，insert一条数据之后多久会commit，这个时间是不确定的，取决于多个因素，包括系统负载、磁盘速度、redo log的大小等等。</p>
<p>在MySQL中，自动提交模式下，每个SQL语句都会自动成为一个事务，并且在执行完该语句后立即提交（commit）。但是，由于InnoDB存储引擎采用了写日志（redo log）的机制，即使在自动提交模式下，insert操作也不一定会立即commit。</p>
<p>具体来说，当执行insert操作时，InnoDB会将该操作写入到redo log中，然后将该操作应用到内存中的数据页（data page）中。此时，该操作的状态为“未提交”。在后续的操作中，如果需要将数据同步到磁盘中，InnoDB会将redo log中的操作应用到磁盘中的数据页中，并将该操作的状态设置为“已提交”。</p>
<p>因此，insert操作何时commit取决于多个因素，包括系统负载、磁盘速度、redo log的大小等等。如果需要立即commit，可以使用MySQL的“commit”命令将数据立即提交到磁盘中。</p>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>由于在项目场景中，没有使用事务，所以在 insert 数据持久化到数据库中时，依赖于 MySQL 数据库到自动 commit ，而自动 commit 并不会在每次 insert 之后都会执行，而 commit 时间有取决于系统负载、磁盘速度、redo log的大小等等因素</p>
<p>当时这个问题也是在开发线测试的时候发现的，开发线的机器资源紧张，或许在 insert 之后，机器资源被其他应用抢占，在流程二结束后，MySQL 抢占到机器资源，持久化到数据库，导致前端并没有拉取到最新数据</p>
<script src="https://utteranc.es/client.js"
        repo="https://github.com/newGaoXin/newGaoXin.github.io/tree/main"
        issue-term="pathname"
        theme="github-light"
        crossorigin="anonymous"
        async>
</script>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Spring</tag>
      </tags>
  </entry>
</search>
